var {
	GraphQLSchema,
	GraphQLObjectType,
	GraphQLString,
	GraphQLList,
	GraphQLInt,
	GraphQLFloat,
	GraphQLBoolean
} = require('graphql');

const redditCommentType = module.exports = new GraphQLObjectType({
	name:'redditComment',
	description:'',
	fields: () => ({
		author_name:			{type:GraphQLString,
									resolve:({author})=>{return author.name}},
		author_flair_css_class:	{type:GraphQLString},
		author_flair_text:		{type:GraphQLString},
		archived:				{type:GraphQLBoolean},
		approved_by:			{type:GraphQLString},
		banned_by:				{type:GraphQLString},
		body:					{type:GraphQLString},
		body_html:				{type:GraphQLString},
		created_utc:			{type:GraphQLString},
		created:				{type:GraphQLString},
		controversiality:		{type:GraphQLInt},
		distinguished:			{type:GraphQLBoolean},
		downs:					{type:GraphQLInt},
		edited:					{type:GraphQLBoolean},
		gilded:					{type:GraphQLInt},
		id:						{type:GraphQLString},
		link_id:				{type:GraphQLString},
		link_author:			{type:GraphQLString},
		link_title:				{type:GraphQLString},
		link_permalink:			{type:GraphQLString},
		link_url:				{type:GraphQLString},
		likes:					{type:GraphQLInt},
		mod_reports:			{type:new GraphQLList(GraphQLString)},
		name:					{type:GraphQLString},
		num_comments:			{type:GraphQLInt},
		num_reports:			{type:GraphQLInt},
		over_18:				{type:GraphQLBoolean},
		parent_id:				{type:GraphQLString},
		quarantine:				{type:GraphQLBoolean},
		//replies:
		report_reasons:			{type:new GraphQLList(GraphQLString)},
		removal_reason:			{type:GraphQLString},
		saved:					{type:GraphQLBoolean},
		score:					{type:GraphQLInt},
		subreddit_id:			{type:GraphQLString},
		subreddit_display_name:	{type:GraphQLString,
									resolve:({subreddit})=>{return subreddit.display_name}},
		subreddit_name_prefixed:{type:GraphQLString},
		score_hidden:			{type:GraphQLBoolean},
		stickied:				{type:GraphQLBoolean},
		subreddit_type:			{type:GraphQLString},
		ups:					{type:GraphQLInt},
		user_reports:			{type:new GraphQLList(GraphQLString)},
		/*-------------------------------nested----------------------------------*/
		/*expand_replies:			{type:new GraphQLList(redditCommentType),
									args:{
										limit: {type:GraphQLInt},
										depth: {type:GraphQLInt},
									},
									resolve: ({id},args) => redditAPI(resolveName='expansion',id=id,args=args)},*/
	})
});